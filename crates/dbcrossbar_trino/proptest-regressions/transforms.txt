# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc f09772ed14f352cf540bc2f564b75b2016b8c700d0db78adf20e157d6369ca2a # shrinks to connector = Postgresql, (value, trino_ty) = (Row([(None, SmallInt(0)), (None, Row([(None, Int(0)), (None, Timestamp(-262143-01-01T00:00:00))])), (None, Char("¡a 00 ¡0¡¡¡0 aA0A0¡aaa¡a 0a¡a¡¡\0 ¡ a¡¡\0¡¡¡¡A0¡¡¡A¡00Aa¡ aA ¡¡0A¡A A ¡\00¡¡¡¢=&\u{7f}Ⱥ𱙿:\u{c1994}Q\u{1b}\"\u{becfa}\u{8211c}#T`\u{bc9a5}\u{7f}G\u{b7d2f}n$$'<:\u{3a033}\u{108fbb}Ce{.\\\n\u{202e}\u{7a1b8}=>=lC$\0{&p\u{7f}\u{e29bd}$M¥g/\u{52372}\n\u{b}7&{\u{eb8f}\0{àqk\u{7f}:\u{4dd53}Q\u{71bb9}z\u{109e97}\u{1b}𠎱='\\S*\u{202e}'&\u{1b}\u{92302}Ѩg?DѨd𧤇\r\u{1b}?YL\u{202e}𭲱\u{ad358}.I\"f\u{b}ȺI\u{98343}\u{c90e3}\u{afdd4}Y\u{75309}B�w7m\u{3cb40}^Ⱥ¥𫆅&\u{b}\"𦑪¯圎\u{10d7d6}\u{14d31}\u{e6ec3}yQ\u{feff}_]:\u{46658}\u{ce8ab}"))]), Row([TrinoField { name: None, data_type: SmallInt }, TrinoField { name: Some(TrinoIdent("_qrec_kmdtu3_ykdftnaenbd")), data_type: Row([TrinoField { name: None, data_type: Int }, TrinoField { name: None, data_type: Timestamp { precision: 5 } }]) }, TrinoField { name: Some(TrinoIdent("a<r9$7yt^x\"v8m2k+`9:a")), data_type: Char { length: 212 } }]))
cc 5fa9a9ab27ddacb3b2ae02d6362646f0c003aeb404867e43fdba4c586572f2e8 # shrinks to connector = Hive, (value, trino_ty) = (Row([(None, Date(+63634-06-15))]), Row([TrinoField { name: None, data_type: Date }]))
cc 767757334f47d6180a0fbe74d751c38d0af33eb41b710653ccda03844bcc8b82 # shrinks to connector = Iceberg, (value, trino_ty) = (Boolean(false), Boolean)
cc be18a0621d5018f652a7c7a5dc6b5c3b638fcc649d8becbf575787f1d0f75ddb # shrinks to connector = Hive, (value, trino_ty) = (Array([]), Array(Time { precision: 1 }))
cc de9bcf1efe53855b083e7039e49101b4f00f1e0f174f2e98009f92ddedc59a2e # shrinks to connector = Hive, (value, trino_ty) = (Row([(None, Json(Null))]), Row([TrinoField { name: None, data_type: Json }]))
cc 439b52b038bbe4aa63329a60565a484a6388876acbee894cc1a986a96fbdca4f # shrinks to connector = Iceberg, (value, trino_ty) = (Array([]), Array(Json))
cc df174e04e6872c71b58f4a29653cc407ddda4f87211a7ca0388f879457973a4f # shrinks to connector = Iceberg, (value, trino_ty) = (Char("¡¡0¡¡a\0a  ¡a0\0¡¡\0¡ ¡\0 ¡\0A¡0aA¡a\0A ¡Aa ¡a¡aA0 ¡a¡ ¡¡ 0 a¡¡ ¡¡a 0 aa00\0a¡¡0\0a¡ Aa¡\0 \0¡¡¡0¡\0¡0¡ 0A¡¡¡¡ 0\0 \u{e000}a¡  ¡a\u{e000}¡¡0\00¡\0à\u{202e}𱓍<\n*$\r<%\u{1c343}\u{202e}'¨0\u{f86c0}\u{202e}\u{7f}\u{5d17b}�GO'¥\0\u{c28bd}`\u{56468}'u\u{7f}鵯*\u{c4e89}&"), Char { length: 153 })
cc c0c3f888369a701db874fdc05649919dcd5a60d7b533b0cbbaae4b2ce91107e3 # shrinks to connector = Hive, (value, trino_ty) = (Array([]), Array(Row([TrinoField { name: None, data_type: Timestamp { precision: 1 } }])))
cc 39098f7deac53d10e47251718f886241a7490575e9384e75e19c537ad7232059 # shrinks to connector = Iceberg, (value, trino_ty) = (Row([(None, Boolean(false))]), Row([TrinoField { name: None, data_type: Boolean }]))
cc c3626a45e94bd6d36bc337f0658b4ed02d8811bca25aff03b9eb44c5d87c4ba9 # shrinks to connector = Iceberg, (value, trino_ty) = (Row([(None, Timestamp(+143917-11-10T07:24:39.700))]), Row([TrinoField { name: None, data_type: Timestamp { precision: 1 } }]))
cc f61ec28fbd5a8dd90718eae9acc191ddf0e2f929d061abf1e29819ee8cfcd882 # shrinks to connector = Hive, (value, trino_ty) = (Row([(None, Array([]))]), Row([TrinoField { name: None, data_type: Array(SphericalGeography) }]))
cc 7bce6033c3639734d9db140255357ff8aca73dc7e046f364427893d1c1f2abbf # shrinks to connector = Iceberg, (value, trino_ty) = (Row([(None, Array([]))]), Row([TrinoField { name: None, data_type: Array(TimestampWithTimeZone { precision: 1 }) }]))
cc 3eb79b19e86602c6d6bc79418c54f255cccba30547ca6dbe21cb7747460b2dc2 # shrinks to connector = Hive, (value, trino_ty) = (Row { values: [SphericalGeography(Object {"coordinates": Array [Number(0.0), Number(0.0)], "type": String("Point")}), Int(0), Timestamp(2234-11-01T01:19:09.170401)], original_type: Row([TrinoField { name: Some(TrinoIdent("y_")), data_type: SphericalGeography }, TrinoField { name: None, data_type: Int }, TrinoField { name: Some(TrinoIdent("__2qy9gw2u")), data_type: Timestamp { precision: 6 } }]) }, Row([TrinoField { name: Some(TrinoIdent("y_")), data_type: SphericalGeography }, TrinoField { name: None, data_type: Int }, TrinoField { name: Some(TrinoIdent("__2qy9gw2u")), data_type: Timestamp { precision: 6 } }]))
cc d3676f34c802cef188627f3fd1cadc029d04c379b7b73319b3e5d7a78a2a2cd7 # shrinks to connector = Hive, (value, trino_ty) = (Row { values: [Array { values: [Double(-1.0488197432300482e222)], original_type: Array(Double) }], original_type: Row([TrinoField { name: None, data_type: Array(Double) }]) }, Row([TrinoField { name: None, data_type: Array(Double) }]))
cc 6c63aa8c4473ea07e3a2283f76eeb19db3c84e91dd2053242dfd1c68525a46c7 # shrinks to connector = Hive, (value, trino_ty) = (Array { values: [Array { values: [Json(Array [Array [Number(-8.399206541775785e288)]])], lit_type: Array(Json) }], lit_type: Array(Array(Json)) }, Array(Array(Json)))
cc f56e04ca642d6775514bfce8e452fe74ca1e568b56deeb7b653142d590b35f42 # shrinks to connector = Hive, (value, trino_ty) = (Row { values: [Row { values: [SphericalGeography(Point(Point(Coord { x: 0.0, y: 114.85827585275118 })))], lit_type: Row([TrinoField { name: None, data_type: SphericalGeography }]) }], lit_type: Row([TrinoField { name: None, data_type: Row([TrinoField { name: None, data_type: SphericalGeography }]) }]) }, Row([TrinoField { name: None, data_type: Row([TrinoField { name: None, data_type: SphericalGeography }]) }]))
cc 88cb86940f6aea13204c03634f5df6fa22765c38dad3cdd90b08b915315fbca4 # shrinks to connector = Hive, (value, trino_ty) = (Array { values: [Array { values: [Time(00:00:00)], lit_type: Array(Time { precision: 1 }) }], lit_type: Array(Array(Time { precision: 1 })) }, Array(Array(Time { precision: 1 })))
cc 52e8958403f98cdebb655d8a9893fff95458b4933fb2d2465ac99e87f46d8d82 # shrinks to connector = Hive, (value, trino_ty) = (Row { values: [Varchar(""), SmallInt(0)], lit_type: Row([TrinoField { name: None, data_type: Varchar { length: Some(1) } }, TrinoField { name: None, data_type: SmallInt }]) }, Row([TrinoField { name: None, data_type: Varchar { length: Some(1) } }, TrinoField { name: None, data_type: SmallInt }]))
